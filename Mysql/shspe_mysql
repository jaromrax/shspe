#!/bin/bash

DEBUG=0
if [ "$1" = "debug" ]; then
    DEBUG=1
else
    DEBUG=0
fi
#DEBUG=1

#  credentials...........
CREDFILE="shspe.pk_mysql"
ZFITFILE=zfitresults.tmp

########### GETS parameter and ....
function runnumber {
    local RF=$1
    echo $RF | grep "^run" >/dev/null
    if [ "$?" != "0" ]; then
	echo not a run
	exit
    fi
    # run reomve; nonnumbers to =; first field; remove leading 0
    echo $RF | sed  "s/^run//g" | sed  "s/[^0-9]/=/g" | cut -d = -f 1 | sed  "s/^0\+//g"
#    echo $RF2
}


##################################### BEGIN ########
##################################### BEGIN ########
##################################### BEGIN ########
##################################### BEGIN ########

if [ ! -e $CREDFILE ]; then
    if [ "$DEBUG" = "1" ]; then
	echo you need file $CREDFILE  that contains:
	echo user=
	echo pass=
	echo database=
    fi
  exit
fi

### READ CREDENTIALS 
 if [ "$DEBUG" = "1" ]; then echo ... going to parse $CREDFILE; fi
USER=`cat $CREDFILE | grep -v \# | grep user= | cut -d = -f 2`
 if [ "$DEBUG" = "1" ]; then echo USER=$USER; fi
PASS=`cat $CREDFILE | grep -v \# | grep pass= | cut -d = -f 2`
DBASE=`cat $CREDFILE | grep -v \# | grep database= | cut -d = -f 2`
if [ "$DBASE" = "" ]; then
     if [ "$DEBUG" = "1" ]; then echo ... no DBASE name defined;fi
    exit
fi


#echo DBASE=$DBASE
# i need
#    user,pass,server,databasename,run number
########################################################
#runnumber run0048_20140628_095336.root
#RUN=`runnumber run0048_20140628_095336.root`

## GET RUN NUMBER FROM .CURRENTFILE ##
RUNNAME=`cat .CURRENTFILE`
if [ "$DEBUG" = "1" ]; then echo "d ... runname $RUNNAME"; fi
RUNBA=`basename $RUNNAME`
if [ "$DEBUG" = "1" ]; then echo "d ... runfull $RUNBA"; fi
RUN=`runnumber $RUNBA`
if [ "$DEBUG" = "1" ]; then echo "d ... run     $RUN"; fi
RUN=$(( $RUN + 0 ))
if [ "$DEBUG" = "1" ]; then echo "d ... run     $RUN"; fi



if [ "$RUN" -ge "0" -a "$RUN" -le "9999" ]; then
    echo ======== continuing bash script for insert to mysql=======
else
    exit
fi

############# COPY ###### TMP ##############################
#### preparation for database ##### only local zfitresults.tmp
mkdir -p /tmp/$DBASE
cp $ZFITFILE /tmp/$DBASE/
echo i ... copy  `basename $ZFITFILE`.jpg  TO /tmp/$DBASE/
cp `basename $ZFITFILE .tmp`.jpg /tmp/$DBASE/
rm /tmp/$DBASE/insert_into_mysql
cp .CURRENTFILE  /tmp/$DBASE/CURRENTFILE
rm   /tmp/$DBASE/CURRENTRUN
if [ "$RUN" -gt "0" ]; then
    echo $RUN >  /tmp/$DBASE/CURRENTRUN
fi



echo "i ... run /$RUN/; database /$DBASE/"
#echo "# run /$RUN/ saved to database $DBASE " >> zfitresults.eff

### LAST FIT SAVED RESULT:
### zfitres ults.tmp##########################
#k dk A dA cc:scom histoname=cut=d=diag=
#
#  NAMING CONVENTIONS!!!!  naming from mkmat
#     c022=>diag6 ...22-16 = de6 = #6
#         =>cutd t6d 

pkid=0;    ##### reading from <zfitresults.tmp   where multiples are
while read line           
do
    # k dk A dA  5from 6to 7fitcode 8spename 9filename
    if [ "$DEBUG" = "1" ]; then echo d ... while loop START ===============; fi
    echo -e "$line"
    pkid=$(( $pkid + 1 ))
    part='n'
     k=`echo $line | awk '{print $1}'`
    dk=`echo $line | awk '{print $2}'`
     A=`echo $line | awk '{print $3}'`
    dA=`echo $line | awk '{print $4}'`
    fitcode=`echo $line | awk '{print $7}'`
    if [ "$DEBUG" = "1" ]; then
	echo "d ... k   dk   A  aA    fitcode"
	echo "d ... $k   $dk  $A  $dA"
    fi
    #### histoname $6   c022  t3_d    t4_diag    #8
    detnumbr=0
    #  E or DE  or SUM or NON
    edesum="non"
    det=`echo $line | awk '{print $8}'`
    if [ "$DEBUG" = "1" ]; then echo d ... detector v1. /$det/; fi
    ###########  first ... check c0024 ###### beginof c017-c024
    echo $det | grep -e "^c" >/dev/null
    if [ "$?" = "0" ]; then
	detnum=`echo $det | sed 's/c//' | awk '{print $1-16}'`
	edesum="de"
	# for 1-8 ... I have negative values
	if [ "$DEBUG" = "1" ]; then echo d ... detNUM\(c\)   v2. /$detnum/... ; fi
	if [ "$detnum" -le "0" ]; then
	    detnum=`echo $det | sed 's/c//' | awk '{print $1}'`
	    edesum="e"
	fi
    else
      ######################################  endof c017 ... c022
      edesum="sum"
#     if [ "$DEBUG" = "1" ]; then echo d ... detector v2. /$det/... not c022; fi
      detnum=`echo $det | awk 'BEGIN{FS="_"} {print substr($1,2,1);}'`
      if [ "$DEBUG" = "1" ]; then echo d ... detNUM\(nonc\) v2. /$detnum/... ; fi
      detlet=`echo $det | awk 'BEGIN{FS="_"} {print substr($1,1,1);}'`
      if [ "$DEBUG" = "1" ]; then echo d ... letter=t  /$detlet/; fi
      if [ "$DEBUG" = "1" ]; then echo d ... detnumbr /$detnum/; fi
      part=`echo $det | awk 'BEGIN{FS="_"} {print $2}'`
      if [ "$DEBUG" = "1" ]; then echo d ... particle /$part/; fi
    fi
    #####################################
    valid=1
    sig=1.
    dsig=0.1
    run=$RUN

    rm  /tmp/$DBASE/CURRENTDETECTOR
    echo $detnum > /tmp/$DBASE/CURRENTDETECTOR
    
    echo "$pkid $run $detnum $part NOW() $k $dk $A $dA $sig $dsig $fitcode $valid $edesum" >> /tmp/$DBASE/insert_into_mysql

#    echo "INSERT INTO  peaks (pkid,run, det,part,t,k,dk,A,dA,sig,dsig,fitcode,valid,edesum) VALUES ('$pkid','$run', '$detnum','$part',NOW(),'$k','$dk','$A','$dA','$sig','$dsig','$fitcode','$valid','$edesum');"

#    $valid=0;
    echo "INSERT INTO  peaks (pkid,run, det,part,t,k,dk,A,dA,sig,dsig,fitcode,valid,edesum) VALUES ('$pkid','$run', '$detnum','$part',NOW(),'$k','$dk','$A','$dA','$sig','$dsig','$fitcode','$valid','$edesum');" | mysql -u$USER -p$PASS $DBASE 2>/dev/null;
    RESULT=$?
    if [ "$RESULT" = "0" ]; then
	echo "R ... result OK"
    else
	echo "R ... PROBLEM WITH INSERTING"
    fi
#    echo "r ... result $?"
 done <$ZFITFILE



exit
############################################################    EXIT
########################################################    EXIT
####################################################    EXIT
#######
